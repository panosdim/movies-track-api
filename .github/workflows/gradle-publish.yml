name: Build Multi-Architecture Native Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      # Set up Temurin JDK 21 for compilation
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # QEMU for multi-arch support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Docker Buildx for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build amd64 native image
      - name: Build native image for amd64
        run: ./gradlew bootBuildImage --imagePlatform=linux/amd64 --imageName=ghcr.io/${{ github.repository }}:amd64
        env:
          BP_NATIVE_IMAGE_BUILD_ARGUMENTS: "-march=core2 -H:+UnlockExperimentalVMOptions"

      # Push amd64 image
      - name: Push amd64 image
        run: docker push ghcr.io/${{ github.repository }}:amd64

  build-arm64:
    runs-on: [self-hosted, arm64]   # ARM64 runner required
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      # Set up Temurin JDK 21 for compilation
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Docker Buildx for ARM64 build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build ARM64 native image
      - name: Build ARM64 native image inside Docker
        run: ./gradlew bootBuildImage --imagePlatform=linux/arm64 --imageName=ghcr.io/${{ github.repository }}:arm64

      # Push arm64 image
      - name: Push arm64 image
        run: docker push ghcr.io/${{ github.repository }}:arm64

  push-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Create multi-arch manifest
      - name: Create multi-arch manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository }}:latest \
            --amend ghcr.io/${{ github.repository }}:amd64 \
            --amend ghcr.io/${{ github.repository }}:arm64

      # Push multi-arch manifest
      - name: Push multi-arch manifest
        run: docker manifest push ghcr.io/${{ github.repository }}:latest
