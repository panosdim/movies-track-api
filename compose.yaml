services:
  postgres:
    image: postgres:17-alpine
    container_name: postgresql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: moviestrack
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d moviestrack"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
  api:
    image: ghcr.io/panosdim/movies-track-api
    container_name: movies-track-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: production
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
  recommendations:
    image: ghcr.io/panosdim/movies-track-recommender
    container_name: movies-track-recommender
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '8005:8005'
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  postgres-data:
